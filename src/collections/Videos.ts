import { CollectionConfig } from 'payload/types';
import beforeChangeHook from '../hooks/beforeChange';
import { MuxFormLogicField } from '../components/MuxFormLogic';
import afterDeleteHook from '../hooks/afterDelete';

const Videos: CollectionConfig = {
  slug: 'videos',
  admin: {
    useAsTitle: 'Videos',
  },
  access: {
    read: () => true,
    delete: () => true,
  },
  upload: {
    staticURL: '/uploads',
    staticDir: '/uploads',
    disableLocalStorage: true,
    mimeTypes: ['video/*'],
    adminThumbnail: ({ doc }) => {
      /* Use Mux's thumbnail url as the admin thumbnail */
      return doc.playbackId ? `https://image.mux.com/${doc.playbackId}/animated.webp?width=256` : null
    },

  },
  hooks: {
    beforeChange: [beforeChangeHook],
    afterDelete: [afterDeleteHook]
  },
  fields: [
    /* This hidden field controls form logic for when the built-in file picker is used */
    {
      name: 'formLogic',
      type: 'ui',
      admin: {
        components: {
          Field: MuxFormLogicField,
          // Todo – how do we remove this field from the filter options?
          // Filter: MuxFormLogicFilter,
        },
      }
    },
    {
      name: 'title',
      type: 'text',
      label: 'Title',
      required: true,
      admin: {
        // components: {
        //   Field: MuxField
        // },

        description: `A unique title for this video that will help you identify it later.`
      }
    },
    /* Custom ID field so Payload ID's match Mux ID's */
    {
      name: 'id',
      label: 'ID',
      type: 'text',
      admin: {
        readOnly: true,
        description: 'This ID and the following fields are all automatically generated by Mux after uploading the video.'
      },
    },
    {
      name: 'playbackId',
      label: 'Playback ID',
      type: 'text',
      admin: {
        readOnly: true,
      },
    },
    {
      name: 'duration',
      label: 'Duration',
      type: 'number',
      admin: {
        readOnly: true,
      },
    },
    {
      name: 'aspectRatio',
      label: 'Aspect Ratio',
      type: 'text',
      admin: {
        readOnly: true,
      },
    }
  ],
}

export default Videos;
